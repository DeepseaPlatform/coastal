# ==============================================================================
# This is the COASTAL default configuration file.
#
# It also serves as documentation for the configuration format.
#
# The configuration consists of 8 sections. They are mostly optional, but
# COASTAL will complain if it cannot find a target and trigger.
#
# 1. coastal.target.*        the system under test
# 2. coastal.bounds.*        bounds on variables
# 3. coastal.settings.*      flags and integer settings
# 4. coastal.divers.*        configuration of divers
# 5. coastal.surfers.*       configuration of surfers
# 6. coastal.strategies.*    configuration of strategies
# 7. coastal.observers.*     all observers to start
# 8. coastal.delegates.*     all delegates to use

# ------------------------------------------------------------------------------
# TARGET:

# coastal.target.jars = NAME_OF_JARFILE
# coastal.target.jars.directory = DIRECTORY_INSIDE_JARFILE
	# To read SUT class files from JARFILE or some directory inside it.

# coastal.target.main = CLASSNAME
	# Specify the fully qualified name of main class file.  COASTAL will
	# usually start the analysis by invoking CLASSNAME.main(String[]).

# coastal.target.entrypoint = METHOD
	# We can specify another method to invoke to start the analysis.
	# The default is "main".

# coastal.target.args = ARG1, ARG2
	# You can specify a number of arguments to pass to "main" or "METHOD".
	# If no arguments are specified, "null" or "false" or "0" is used.
	# Separator: COMMA

# coastal.target.instrument = PREFIX1, PREFIX2
	# Any class whose fully qualified name starts with one of these
	# prefixes will be instrumented.
	# Separator: COMMA

# coastal.target.trigger = TRIGGER1; TRIGGER2
	# List of triggers that will kick off symbolic mode.
	# Separator: SEMICOLON

# ------------------------------------------------------------------------------
# BOUNDS:

# coastal.bounds.NAME.min = MIN_VALUE
# coastal.bounds.NAME.max = MAX_VALUE
	# Specify bounds for variables.
	# NAME may also be a type (int, long, real, ...)
	# NAME may refer to an array, in which case it applies to all elements.

# ------------------------------------------------------------------------------
# SETTINGS:

coastal.settings.trace-all = false
	# Whether or not COASTAL keeps track (updates the symbolic state) of
	# the entire run of the program. This is necessary when, for example,
	# a class contains static fields.

coastal.settings.echo-output = false
	# Whether or not the program's original output is shown.

coastal.settings.draw-paths = false
	# Whether or not the path tree is drawn (crudely) after each insertion.

coastal.settings.concrete-values = true
	# Whether or not the concrete return values of uninstrumented
	# functions are used, or whether they are replaced with fresh
	# symbolic variables.

coastal.settings.max-threads = 128
	# Maximum number of threads created.

coastal.settings.run-limit = 0
coastal.settings.time-limit = 0
coastal.settings.path-limit = 0
coastal.settings.conjunct-limit = 0
	# Limits on the number of runs, total running time, the number of
	# paths, and the number of conjuncts per path.  A value of 0 means
	# that there is no limit.
			
coastal.settings.solver = za.ac.sun.cs.coastal.solver.SolverZ3
coastal.settings.solver.z3-args = -smt2 -in
coastal.settings.solver.z3-path = /usr/local/bin/z3
	# ALTERNATIVE:
# coastal.settings.solver = za.ac.sun.cs.coastal.solver.SolverGreen
# green.services = ...

# ------------------------------------------------------------------------------
# DIVERS:

coastal.divers.threads = 1
coastal.divers.min-threads = 0
coastal.divers.max-threads = 128
	# If no divers and no surfers are specified, COASTAL defaults to creating
	# one diver.

# ------------------------------------------------------------------------------
# SURFERS:

coastal.surfers.threads = 0
coastal.surfers.min-threads = 0
coastal.surfers.max-threads = 128

# ------------------------------------------------------------------------------
# STRATEGIES:

coastal.strategies = DF
	# List of strategy names.  Each name can specify further details.
	# Names can be anything.
	# Separator: COMMA

coastal.strategies.DF = za.ac.sun.cs.coastal.strategy.pathbased.DepthFirstFactory
coastal.strategies.DF.threads = 1

	# ALTERNATIVES:
# coastal.strategies.BF = za.ac.sun.cs.coastal.strategies.pathbased.BreadthFirstFactory
# coastal.strategies.R = za.ac.sun.cs.coastal.strategies.pathbased.RandomFactory
# coastal.strategies.R.seed = 12348765
# coastal.strategies.G1 = za.ac.sun.cs.coastal.strategies.pathbased.GenerationalFactory
# coastal.strategies.G1.full = true
# coastal.strategies.G1.topdown = true
# coastal.strategies.G2 = za.ac.sun.cs.coastal.strategies.pathbased.GenerationalFactory
# coastal.strategies.G2.full = false
# coastal.strategies.G2.topdown = false

	# SINGLE:
# coastal.strategies = za.ac.sun.cs.coastal.strategies.SomeStrategy
# coastal.strategies.option1 = something1
# coastal.strategies.option2 = something2

# ------------------------------------------------------------------------------
# OBSERVERS:

# coastal.observers = A, B, C
	# List of observers to create.  Each name can specify further details. 
	# Names can be anything.
	# Separator: COMMA

# coastal.observers.IC = za.ac.sun.cs.coastal.observers.InstructionCoverage
# coastal.observers.MC = za.ac.sun.cs.coastal.observers.MarkerCoverage
# coastal.observers.STOP = za.ac.sun.cs.coastal.observers.StopController
# coastal.observers.GUI = za.ac.sun.cs.coastal.observers.GUI

	# SINGLE:
# coastal.observers = za.ac.sun.cs.coastal.observers.SomeObserver
# coastal.observers.option1 = something1
# coastal.observers.option2 = something2

# ------------------------------------------------------------------------------
# DELEGATES:

# coastal.delegates = X, Y
	# List of delegates to create.  Each name can specify further details. 
	# Names can be anything.
	# Separator: COMMA

# coastal.delegates.X.model = za.ac.sun.cs.coastal.model.String
# coastal.delegates.X.for = java.lang.String

# coastal.delegates.Y.model = za.ac.sun.cs.coastal.model.Math
# coastal.delegates.Y.for = java.lang.Math

	# SINGLE:
# coastal.delegates = za.ac.sun.cs.coastal.delegates.SomeDelegate
# coastal.delegates.option1 = something1
# coastal.delegates.option2 = something2
